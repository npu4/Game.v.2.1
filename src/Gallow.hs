module Gallow(
    gallow
)where
import GuessOfGallow
import Secret

gallow::IO()
gallow = do
    putStrLn pictureOfGame
    putStrLn $ concat[  "Я загадаю слово и отмечу символами '_' места для букв. \n" ,
                        "Ты будешь предлагать букву, которая может входить в это \n",
                        "слово. Если такая буква есть в слове, то я напишу её \n"   ,
                        "вместо соответствующей черты. Все слова подобраны так, \n" ,
                        "что каждая буква встречается в них один раз. За каждый \n" ,
                        "неправильный ответ я буду добавлять одну часть туловища \n",
                        "к виселице.\n"                                             ,
                        "Ты будешь угадывать до тех пор, пока не отгадаешь всё \n"  ,
                        "слово. Если туловище в виселице нарисовано полностью, \n"  ,
                        "то отгадывающий игрок проигрывает, считается повешенным.\n",
                        "Начнём."                                                   ]
    secret <- getSecretWord
    putStrLn "Я загадал слово из пяти букв."
    let onScreen = "_____"
    guess secret onScreen 0
    
    
pictureOfGame :: String
pictureOfGame = concat[      "        ###############\n"         ,
                             "        |             #\n"         ,
                             "        |             #\n"         ,
                             "        |             #\n"         ,
                             "        |             #\n"         ,
                             "        O             #\n"         ,
                             "      / | \\           #\n"        ,
                             "        |             #\n"         ,
                             "       / \\            #\n"        ,
                             "                      #\n"         ,  
                             "                      #\n"         ,
                             " ############################\n"   ,
                             " #                          #\n"   ]
